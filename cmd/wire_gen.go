// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/realHoangHai/go-assmin/cmd/server"
	"github.com/realHoangHai/go-assmin/internal/middleware"
	"github.com/realHoangHai/go-assmin/internal/repo"
	"github.com/realHoangHai/go-assmin/internal/service"
	"github.com/realHoangHai/go-assmin/pkg/redis"
	"github.com/realHoangHai/go-assmin/pkg/tokenprovider/token"
)

// Injectors from wire.go:

func initializeServer(ctx context.Context) (*server.Server, error) {
	iRepo, err := repo.NewRepo(ctx)
	if err != nil {
		return nil, err
	}
	universalClient, err := redis.NewRedis(ctx)
	if err != nil {
		return nil, err
	}
	tokenMaker := token.NewTokenMaker()
	handler := middleware.NewHandler(ctx, iRepo, universalClient, tokenMaker)
	serviceService := service.NewService(iRepo, handler, tokenMaker)
	serverServer, err := server.NewServer(handler, serviceService)
	if err != nil {
		return nil, err
	}
	return serverServer, nil
}
